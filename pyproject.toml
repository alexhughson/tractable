[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tractable"
version = "0.1.0"
description = "Type-safe Python library for Google Sheets operations"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
keywords = ["google-sheets", "spreadsheet", "data-processing", "pydantic", "type-safe"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Spreadsheet",
    "Typing :: Typed",
]

dependencies = [
    "pydantic>=2.0.0",
    "gspread>=6.0.0",
    "google-auth>=2.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/tractable"
Documentation = "https://github.com/yourusername/tractable#readme"
Repository = "https://github.com/yourusername/tractable.git"
Issues = "https://github.com/yourusername/tractable/issues"

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "/tests",
    "/.gitignore",
    "/.pre-commit-config.yaml",
    "/Makefile",
    "/CLAUDE.md",
    "/venv",
    "*.pyc",
    "__pycache__",
]

[tool.hatch.build.targets.wheel]
packages = ["tractable"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
target-version = "py38"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by ruff format)
    "B008",  # do not perform function calls in argument defaults
    "B905",  # zip without explicit strict parameter
]

[tool.ruff.lint.isort]
known-first-party = ["tractable"]

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = "-v"

[tool.coverage.run]
source = ["tractable"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]